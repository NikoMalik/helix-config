[language-server.zls]
# omit the following line if `zls` is in your PATH
command = "/home/niko/src/zls/zig-out/bin/zls"
# There are two ways to set config options:
#   - edit your `zls.json` that applies to any editor that uses ZLS
#   - set in-editor config options with the `config.<name>` fields below.
#
# Further information on how to configure ZLS:
# https://zigtools.org/zls/configure/

# Whether to enable build-on-save diagnostics
#
# Further information about build-on save:
# https://zigtools.org/zls/guides/build-on-save/
config.enable_build_on_save = true

# omit the following line if `zig` is in your PATH
# config.zig_exe_path = "/path/to/zig_executable"
#
#
#
#

[[language]]
name = "toml"
auto-format = true
# https://github.com/bd82/toml-tools/tree/master/packages/prettier-plugin-toml
formatter = { command = "prettier", args = ["--parser", "toml"] }

[[language]]
name = "c"
formatter = { command = "clang-format", args = ["-style={IndentWidth: 4, TabWidth: 4,  PackConstructorInitializers: Never, SortIncludes: false,ColumnLimit: 0}"] }
auto-format = true

# [language-server.clangd.config]
# fallbackFlags = ["-DUNIT_TESTING"]

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--parser", "json"] }


[[language]]
name = "go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "gopls" ]
formatter = {command = "goimports"}
# TODO: gopls needs utf-8 offsets?
indent = { tab-width = 4, unit = "\t" }

[language-server.gopls]
command = "gopls"
[language-server.gopls.config]
gofumpt = true
local = "goimports"
staticcheck = true
usePlaceholders = true
completeUnimported = true
# "analyses" = {
#   "fieldalignment" = true,
#   "nilness" = true,
#   unusedparams = true,
#   modernize = false,
#   shadow = true,
# }
[language-server.gopls.config.analyses]
"fieldalignment" = true
"nilness" = true
shadow = true
modernize = false




[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true



# [language-server.golangci-lint-lsp]
# command = "golangci-lint-langserver"

# [language-server.golangci-lint-lsp.config]
# command = ["golangci-lint", "run", "--out-format", "json", "--issues-exit-code=1"]
